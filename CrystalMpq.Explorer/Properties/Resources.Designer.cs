//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.17929
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CrystalMpq.Explorer.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CrystalMpq.Explorer.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die CrystalMpq Explorer ähnelt.
        /// </summary>
        internal static string AppTitle {
            get {
                return ResourceManager.GetString("AppTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot find another occurence of the text. ähnelt.
        /// </summary>
        internal static string CannotFindMoreMessage {
            get {
                return ResourceManager.GetString("CannotFindMoreMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Icon ähnlich wie (Symbol).
        /// </summary>
        internal static System.Drawing.Icon ClosedFolderIcon {
            get {
                object obj = ResourceManager.GetObject("ClosedFolderIcon", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap CopyToolbarIcon {
            get {
                object obj = ResourceManager.GetObject("CopyToolbarIcon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The directory &quot;{0}&quot; does not exists. Attempt to create it ? ähnelt.
        /// </summary>
        internal static string DirectoryCreationDialogMessage {
            get {
                return ResourceManager.GetString("DirectoryCreationDialogMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The specified directory does not exist ähnelt.
        /// </summary>
        internal static string DirectoryCreationDialogTitle {
            get {
                return ResourceManager.GetString("DirectoryCreationDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The directory &quot;{0}&quot; could not be created. ähnelt.
        /// </summary>
        internal static string DirectoryCreationErrorDialogMessage {
            get {
                return ResourceManager.GetString("DirectoryCreationErrorDialogMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error creating the directory ähnelt.
        /// </summary>
        internal static string DirectoryCreationErrorDialogTitle {
            get {
                return ResourceManager.GetString("DirectoryCreationErrorDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error ähnelt.
        /// </summary>
        internal static string ErrorDialogTitle {
            get {
                return ResourceManager.GetString("ErrorDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ExclamationToolbarIcon {
            get {
                object obj = ResourceManager.GetObject("ExclamationToolbarIcon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ExportToolbarIcon {
            get {
                object obj = ResourceManager.GetObject("ExportToolbarIcon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Extracting file {0} of {1}:
        ///{2} ähnelt.
        /// </summary>
        internal static string ExtractionFileMessage {
            get {
                return ResourceManager.GetString("ExtractionFileMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} of {1} done. ähnelt.
        /// </summary>
        internal static string ExtractionStatusMessage {
            get {
                return ResourceManager.GetString("ExtractionStatusMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap FindToolbarIcon {
            get {
                object obj = ResourceManager.GetObject("FindToolbarIcon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid directory ähnelt.
        /// </summary>
        internal static string InvalidDirectoryErrorDialogTitle {
            get {
                return ResourceManager.GetString("InvalidDirectoryErrorDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The specified directory name contains invalid characters, such as &quot;, &lt;, &gt; or |. ähnelt.
        /// </summary>
        internal static string InvalidDirectoryNameErrorDialogMessage {
            get {
                return ResourceManager.GetString("InvalidDirectoryNameErrorDialogMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The directory name is empty. ähnelt.
        /// </summary>
        internal static string InvalidDirectoryNullErrorDialogMessage {
            get {
                return ResourceManager.GetString("InvalidDirectoryNullErrorDialogMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The directory name is too long. ähnelt.
        /// </summary>
        internal static string InvalidDirectoryPathTooLongErrorDialogMessage {
            get {
                return ResourceManager.GetString("InvalidDirectoryPathTooLongErrorDialogMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Text not found. ähnelt.
        /// </summary>
        internal static string NotFoundMessage {
            get {
                return ResourceManager.GetString("NotFoundMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Icon ähnlich wie (Symbol).
        /// </summary>
        internal static System.Drawing.Icon OpenFolderIcon {
            get {
                object obj = ResourceManager.GetObject("OpenFolderIcon", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap OpenToolbarIcon {
            get {
                object obj = ResourceManager.GetObject("OpenToolbarIcon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A file with the name &quot;{0}&quot; already exists in the directory &quot;{1}&quot;. Do you want to overwrite it ? ähnelt.
        /// </summary>
        internal static string OverwriteFileDialogMessage {
            get {
                return ResourceManager.GetString("OverwriteFileDialogMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Overwrite file ähnelt.
        /// </summary>
        internal static string OverwriteFileDialogTitle {
            get {
                return ResourceManager.GetString("OverwriteFileDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap PropertiesToolbarIcon {
            get {
                object obj = ResourceManager.GetObject("PropertiesToolbarIcon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encoding used by the text viewer when viewing a new file. ähnelt.
        /// </summary>
        internal static string PropertyDescriptionDefaultEncoding {
            get {
                return ResourceManager.GetString("PropertyDescriptionDefaultEncoding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die General Settings of CrystalMpq Explorer ähnelt.
        /// </summary>
        internal static string PropertyDescriptionGeneralSettings {
            get {
                return ResourceManager.GetString("PropertyDescriptionGeneralSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The directory where plug-in assemblies are stored. Changes to this setting will be applied on next start. ähnelt.
        /// </summary>
        internal static string PropertyDescriptionPluginsDirectory {
            get {
                return ResourceManager.GetString("PropertyDescriptionPluginsDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Settings of CrystalMpq&apos;s internal Text Viewer. ähnelt.
        /// </summary>
        internal static string PropertyDescriptionTextViewerSettings {
            get {
                return ResourceManager.GetString("PropertyDescriptionTextViewerSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The background color of the view panel. ähnelt.
        /// </summary>
        internal static string PropertyDescriptionViewerBackColor {
            get {
                return ResourceManager.GetString("PropertyDescriptionViewerBackColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Default Text Encoding ähnelt.
        /// </summary>
        internal static string PropertyDisplayNameDefaultEncoding {
            get {
                return ResourceManager.GetString("PropertyDisplayNameDefaultEncoding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die General Settings ähnelt.
        /// </summary>
        internal static string PropertyDisplayNameGeneralSettings {
            get {
                return ResourceManager.GetString("PropertyDisplayNameGeneralSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Plugins Directory ähnelt.
        /// </summary>
        internal static string PropertyDisplayNamePluginsDirectory {
            get {
                return ResourceManager.GetString("PropertyDisplayNamePluginsDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Text Viewer Settings ähnelt.
        /// </summary>
        internal static string PropertyDisplayNameTextViewerSettings {
            get {
                return ResourceManager.GetString("PropertyDisplayNameTextViewerSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Background Color ähnelt.
        /// </summary>
        internal static string PropertyDisplayNameViewerBackColor {
            get {
                return ResourceManager.GetString("PropertyDisplayNameViewerBackColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reached end of the text.Starting back at the beginning. ähnelt.
        /// </summary>
        internal static string ReachedEndMessage {
            get {
                return ResourceManager.GetString("ReachedEndMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap SaveToolbarIcon {
            get {
                object obj = ResourceManager.GetObject("SaveToolbarIcon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die General ähnelt.
        /// </summary>
        internal static string SettingsGeneral {
            get {
                return ResourceManager.GetString("SettingsGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Plug-ins ähnelt.
        /// </summary>
        internal static string SettingsPlugins {
            get {
                return ResourceManager.GetString("SettingsPlugins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 1 byte ähnelt.
        /// </summary>
        internal static string UnitByteFormat {
            get {
                return ResourceManager.GetString("UnitByteFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0:0.##} bytes ähnelt.
        /// </summary>
        internal static string UnitBytesFormat {
            get {
                return ResourceManager.GetString("UnitBytesFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0:0.##} EB ähnelt.
        /// </summary>
        internal static string UnitExaByteFormat {
            get {
                return ResourceManager.GetString("UnitExaByteFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0:0.##} GB ähnelt.
        /// </summary>
        internal static string UnitGigaByteFormat {
            get {
                return ResourceManager.GetString("UnitGigaByteFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0:0.##} KB ähnelt.
        /// </summary>
        internal static string UnitKiloByteFormat {
            get {
                return ResourceManager.GetString("UnitKiloByteFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0:0.##} MB ähnelt.
        /// </summary>
        internal static string UnitMegaByteFormat {
            get {
                return ResourceManager.GetString("UnitMegaByteFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0:0.##} PB ähnelt.
        /// </summary>
        internal static string UnitPetaByteFormat {
            get {
                return ResourceManager.GetString("UnitPetaByteFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0:0.##} TB ähnelt.
        /// </summary>
        internal static string UnitTeraByteFormat {
            get {
                return ResourceManager.GetString("UnitTeraByteFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Icon ähnlich wie (Symbol).
        /// </summary>
        internal static System.Drawing.Icon UnknownFileIcon {
            get {
                object obj = ResourceManager.GetObject("UnknownFileIcon", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
    }
}
